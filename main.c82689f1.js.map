{"version":3,"sources":["scripts/main.js"],"names":["document","querySelectorAll","inputs","stringConverter","letter","i","toUpperCase","input","label","createElement","className","htmlFor","id","rewritedName","name","split","map","join","textContent","placeholder","slice","closest","append"],"mappings":";AAAA,aA2BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAzBmBA,IAyBnB,EAzBmBA,EAAAA,SAASC,iBAAiB,SAyB7C,EAAA,EAAA,GAzBSC,EAAAA,EAAAA,MAAAA,GAEJC,EAAkB,SAACC,EAAQC,GAC3BD,OAAAA,IAAWA,EAAOE,eAAuB,IAAND,EAC1BD,IAAAA,OAAAA,GAGNA,GAGWF,EAAAA,EAAAA,GAenB,IAf2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBK,IAAAA,EAAiB,EAAA,MACpBC,EAAQR,SAASS,cAAc,SAErCD,EAAME,UAAY,cAClBF,EAAMG,QAAUJ,EAAMK,GAEhBC,IAAAA,EAAeN,EAAMO,KACxBC,MAAM,IACNC,IAAIb,GACJc,KAAK,IAERT,EAAMU,YAAcL,EACpBN,EAAMY,YAAcN,EAAa,GAAGP,cAAgBO,EAAaO,MAAM,GAEvEb,EAAMc,QAAQ,UAAUC,OAAOd,IAChC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.c82689f1.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst [...inputs] = document.querySelectorAll('input');\n\nconst stringConverter = (letter, i) => {\n  if (letter === letter.toUpperCase() && i !== 0) {\n    return ` ${letter}`;\n  }\n\n  return letter;\n};\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.htmlFor = input.id;\n\n  const rewritedName = input.name\n    .split('')\n    .map(stringConverter)\n    .join('');\n\n  label.textContent = rewritedName;\n  input.placeholder = rewritedName[0].toUpperCase() + rewritedName.slice(1);\n\n  input.closest('.field').append(label);\n}\n"]}